test_cat (__main__.TestFEL) ... ok
test_cat_stdin (__main__.TestFEL) ... ok
test_cd_pwd (__main__.TestFEL) ... ok
test_cut (__main__.TestFEL) ... ok
test_cut_interval (__main__.TestFEL) ... ok
test_cut_open_interval (__main__.TestFEL) ... ok
test_cut_overlapping (__main__.TestFEL) ... FAIL
test_cut_stdin (__main__.TestFEL) ... ok
test_cut_union (__main__.TestFEL) ... FAIL
test_disabled_doublequotes (__main__.TestFEL) ... FAIL
test_doublequotes (__main__.TestFEL) ... ok
test_echo (__main__.TestFEL) ... ok
test_find (__main__.TestFEL) ... ok
test_find_dir (__main__.TestFEL) ... ok
test_find_pattern (__main__.TestFEL) ... ok
test_globbing (__main__.TestFEL) ... ok
test_globbing_dir (__main__.TestFEL) ... FAIL
test_grep (__main__.TestFEL) ... ok
test_grep_files (__main__.TestFEL) ... ok
test_grep_no_matches (__main__.TestFEL) ... ok
test_grep_re (__main__.TestFEL) ... ok
test_grep_stdin (__main__.TestFEL) ... ok
test_head (__main__.TestFEL) ... ok
test_head_n0 (__main__.TestFEL) ... ok
test_head_n5 (__main__.TestFEL) ... ok
test_head_n50 (__main__.TestFEL) ... ok
test_head_stdin (__main__.TestFEL) ... ok
test_input_redirection (__main__.TestFEL) ... ok
test_input_redirection_infront (__main__.TestFEL) ... ok
test_input_redirection_nospace (__main__.TestFEL) ... ok
test_ls (__main__.TestFEL) ... ok
test_ls_dir (__main__.TestFEL) ... ok
test_ls_hidden (__main__.TestFEL) ... ok
test_nested_doublequotes (__main__.TestFEL) ... ok
test_output_redirection (__main__.TestFEL) ... ok
test_output_redirection_overwrite (__main__.TestFEL) ... ok
test_pipe_chain_sort_uniq (__main__.TestFEL) ... FAIL
test_pipe_uniq (__main__.TestFEL) ... ok
test_pwd (__main__.TestFEL) ... ok
test_quote_keyword (__main__.TestFEL) ... ok
test_semicolon (__main__.TestFEL) ... ok
test_semicolon_chain (__main__.TestFEL) ... ok
test_semicolon_exception (__main__.TestFEL) ... FAIL
test_singlequotes (__main__.TestFEL) ... ok
test_sort (__main__.TestFEL) ... ok
test_sort_r (__main__.TestFEL) ... ok
test_sort_stdin (__main__.TestFEL) ... ok
test_sort_uniq (__main__.TestFEL) ... ok
test_splitting (__main__.TestFEL) ... ok
test_substitution (__main__.TestFEL) ... ok
test_substitution_app (__main__.TestFEL) ... ok
test_substitution_doublequotes (__main__.TestFEL) ... ok
test_substitution_insidearg (__main__.TestFEL) ... ok
test_substitution_keywords (__main__.TestFEL) ... FAIL
test_substitution_semicolon (__main__.TestFEL) ... FAIL
test_substitution_sort_find (__main__.TestFEL) ... FAIL
test_substitution_splitting (__main__.TestFEL) ... ok
test_tail (__main__.TestFEL) ... ok
test_tail_n0 (__main__.TestFEL) ... ok
test_tail_n5 (__main__.TestFEL) ... ok
test_tail_n50 (__main__.TestFEL) ... ok
test_tail_stdin (__main__.TestFEL) ... ok
test_uniq (__main__.TestFEL) ... ok
test_uniq_i (__main__.TestFEL) ... ok
test_uniq_stdin (__main__.TestFEL) ... ok
test_unsafe_ls (__main__.TestFEL) ... FAIL

======================================================================
FAIL: test_cut_overlapping (__main__.TestFEL)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/Users/yadongliu/Desktop/comp0010-shell-java-j1/system_test/tests.py", line 292, in test_cut_overlapping
    self.assertEqual(result, ["AA", "BB", "AA"])
AssertionError: Lists differ: ['COMP0010 shell: cut: invalid argument 2-'] != ['AA', 'BB', 'AA']

First differing element 0:
'COMP0010 shell: cut: invalid argument 2-'
'AA'

Second list contains 2 additional elements.
First extra element 1:
'BB'

- ['COMP0010 shell: cut: invalid argument 2-']
+ ['AA', 'BB', 'AA']

======================================================================
FAIL: test_cut_union (__main__.TestFEL)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/Users/yadongliu/Desktop/comp0010-shell-java-j1/system_test/tests.py", line 304, in test_cut_union
    self.assertEqual(result, "abc")
AssertionError: 'COMP0010 shell: cut: invalid argument 2-' != 'abc'
- COMP0010 shell: cut: invalid argument 2-
+ abc


======================================================================
FAIL: test_disabled_doublequotes (__main__.TestFEL)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/Users/yadongliu/Desktop/comp0010-shell-java-j1/system_test/tests.py", line 587, in test_disabled_doublequotes
    self.assertEqual(result, '""')
AssertionError: '' != '""'
+ ""

======================================================================
FAIL: test_globbing_dir (__main__.TestFEL)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/Users/yadongliu/Desktop/comp0010-shell-java-j1/system_test/tests.py", line 443, in test_globbing_dir
    self.assertEqual(
AssertionError: Items in the first set but not the second:
'one'
'COMP0010'
'argument'
'Echo:'
'at'
'should'
'has'
'application'
'least'
'shell:'
Items in the second set but not the first:
'dir1/file1.txt'
'dir1/file2.txt'
'dir1/longfile.txt'

======================================================================
FAIL: test_pipe_chain_sort_uniq (__main__.TestFEL)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/Users/yadongliu/Desktop/comp0010-shell-java-j1/system_test/tests.py", line 496, in test_pipe_chain_sort_uniq
    self.assertEqual(result, ["AAA", "BBB", "CCC"])
AssertionError: Lists differ: ['AAA', 'BBB', 'AAA', 'CCC', 'AAA', 'BBB', 'CCC'] != ['AAA', 'BBB', 'CCC']

First differing element 2:
'AAA'
'CCC'

First list contains 4 additional elements.
First extra element 3:
'CCC'

- ['AAA', 'BBB', 'AAA', 'CCC', 'AAA', 'BBB', 'CCC']
+ ['AAA', 'BBB', 'CCC']

======================================================================
FAIL: test_semicolon_exception (__main__.TestFEL)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/Users/yadongliu/Desktop/comp0010-shell-java-j1/system_test/tests.py", line 463, in test_semicolon_exception
    self.assertEqual(result, "")
AssertionError: 'COMP0010 shell: ls: no such directory: dir3' != ''
- COMP0010 shell: ls: no such directory: dir3
+ 


======================================================================
FAIL: test_substitution_keywords (__main__.TestFEL)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/Users/yadongliu/Desktop/comp0010-shell-java-j1/system_test/tests.py", line 545, in test_substitution_keywords
    self.assertEqual(result, "''")
AssertionError: '' != "''"
+ ''

======================================================================
FAIL: test_substitution_semicolon (__main__.TestFEL)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/Users/yadongliu/Desktop/comp0010-shell-java-j1/system_test/tests.py", line 539, in test_substitution_semicolon
    self.assertEqual(result, "foo bar")
AssertionError: 'foobar' != 'foo bar'
- foobar
+ foo bar
?    +


======================================================================
FAIL: test_substitution_sort_find (__main__.TestFEL)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/Users/yadongliu/Desktop/comp0010-shell-java-j1/system_test/tests.py", line 533, in test_substitution_sort_find
    self.assertEqual(result, ["AAA", "AAA", "aaa"])
AssertionError: Lists differ: ['COMP0010 shell: cat: can not open `find dir2 -name *.txt`'] != ['AAA', 'AAA', 'aaa']

First differing element 0:
'COMP0010 shell: cat: can not open `find dir2 -name *.txt`'
'AAA'

Second list contains 2 additional elements.
First extra element 1:
'AAA'

- ['COMP0010 shell: cat: can not open `find dir2 -name *.txt`']
+ ['AAA', 'AAA', 'aaa']

======================================================================
FAIL: test_unsafe_ls (__main__.TestFEL)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/Users/yadongliu/Desktop/comp0010-shell-java-j1/system_test/tests.py", line 470, in test_unsafe_ls
    self.assertEqual(result, "AAA")
AssertionError: '' != 'AAA'
+ AAA

----------------------------------------------------------------------
Ran 66 tests in 166.359s

FAILED (failures=10)
